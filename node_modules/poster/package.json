{
  "name": "poster",
  "author": {
    "name": "Ryan French",
    "email": "frenchrya@gmail.com"
  },
  "version": "0.0.1",
  "description": "node.js module for streaming local/remote files over multipart.",
  "keywords": [
    "upload",
    "multipart",
    "POST"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rfrench/poster.git"
  },
  "directories": {
    "lib": "lib"
  },
  "main": "./index",
  "engines": [
    "node >= 0.4.7"
  ],
  "readme": "# poster\nAsync node module for uploading local/remote files over multipart.\n\n## Install\n<pre>\n  $ npm install poster\n</pre>\n\n## post(uri, options, callback[err, data])\n\n### Options\n - `uploadUrl`: Upload URL. (required)\n - `method`: HTTP method type. Defaults to `POST`.\n - `fileId`: File ID parameter name of the file. Defaults to `Filedata`.\n - `fields`: Optional form parameters.\n - `maxFileSize`: Maximum file size allowed to be uploaded in bytes. Disabled by default.\n - `downloadFileName`: If supplied, this will override the parsed file name from the url.\n - `maxRedirects`: Total # of redirects allowed before giving up downloading the file. Defaults to `5`.\n - `downloadAgent`: Use your own http.Agent for downloading files. Defaults to the global agent.\n - `uploadAgent`: Use your own http.Agent for uploading files. Defaults to the global agent.\n - `agent`: If supplied, this value will use the same agent for both the downloadAgent and uploadAgent.\n\n## Examples\n\n### Stream local file\n``` js\nvar poster = require('poster');\n\nvar options = {\n  uploadUrl: 'http://mysite.com/upload',\n  method: 'POST',\n  fileId: 'file',\n  fields: {\n    'myfield': 'value',\n    'myfield2': 'value2'\n  }\n};\n\nposter.post('file.jpg', options, function(err, data) {\n  if (!err) {\n    console.log(data);\n  }\n});\n```\n\n### Stream remote file\n``` js\nvar poster = require('poster');\n\nvar options = {\n  uploadUrl: 'http://mysite.com/upload',\n  method: 'POST',\n  fileId: 'file',\n  fields: {\n    'myfield': 'value',\n    'myfield2': 'value2'\n  }\n};\n\nposter.post('https://www.google.com/logos/2012/addams11-hp.jpg', options, function(err, data) {\n  if (!err) {\n    console.log(data);\n  }\n});\n```\n\n## BYOA (Bring Your Own Agent)\n<pre>\n  $ npm install tunnel\n</pre>\n\n``` js\nvar poster = require('poster');\nvar tunnel = require('tunnel'); //only works with 0.6.11+\nvar proxyAgent = new tunnel.httpOverHttp({\n  proxy: {\n    host: 'myproxy.com',\n    port: 80\n  }\n});\n\nvar options = {\n  uploadUrl: 'http://mysite.com/upload',\n  method: 'POST',\n  fileId: 'file',\n  fields: {\n    'myfield': 'value',\n    'myfield2': 'value2'\n  },\n  downloadAgent: proxyAgent\n};\n\nposter.post('https://www.google.com/logos/2012/addams11-hp.jpg', options, function(err, data) {\n  if (!err) {\n    console.log(data);\n  }\n});\n```",
  "_id": "poster@0.0.1",
  "dist": {
    "shasum": "ad4ca36ef974595793c4ff9e8b779f0dcce78504"
  },
  "_from": "poster@X"
}
